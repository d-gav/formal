
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33+67 (git sha1 076c5ceb7, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: blocking_with_spi_configured.v
Parsing formal SystemVerilog input from `blocking_with_spi_configured.v' to AST representation.
Storing AST representation for module `$abstract\blocking_with_spi_configured'.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\blocking_with_spi_configured'.
Generating RTLIL representation for module `\blocking_with_spi_configured'.

2.2.1. Analyzing design hierarchy..
Top module:  \blocking_with_spi_configured

2.2.2. Analyzing design hierarchy..
Top module:  \blocking_with_spi_configured
Removing unused module `$abstract\blocking_with_spi_configured'.
Removed 1 unused modules.
Module blocking_with_spi_configured directly or indirectly contains formal properties -> setting "keep" attribute.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
Found and cleaned up 1 empty switch in `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:45$9'.
Cleaned up 2 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$blocking_with_spi_configured.v:99$40 in module blocking_with_spi_configured.
Marked 4 switch rules as full_case in process $proc$blocking_with_spi_configured.v:65$15 in module blocking_with_spi_configured.
Marked 3 switch rules as full_case in process $proc$blocking_with_spi_configured.v:45$9 in module blocking_with_spi_configured.
Marked 2 switch rules as full_case in process $proc$blocking_with_spi_configured.v:37$8 in module blocking_with_spi_configured.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 11 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).

2.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~13 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:0$83'.
Creating decoders for process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
     1/10: $0$formal$blocking_with_spi_configured.v:100$3_EN[0:0]$42
     2/10: $0$formal$blocking_with_spi_configured.v:100$3_CHECK[0:0]$41
     3/10: $0$formal$blocking_with_spi_configured.v:103$4_EN[0:0]$44
     4/10: $0$formal$blocking_with_spi_configured.v:103$4_CHECK[0:0]$43
     5/10: $0$formal$blocking_with_spi_configured.v:112$5_EN[0:0]$46
     6/10: $0$formal$blocking_with_spi_configured.v:112$5_CHECK[0:0]$45
     7/10: $0$formal$blocking_with_spi_configured.v:116$6_EN[0:0]$48
     8/10: $0$formal$blocking_with_spi_configured.v:116$6_CHECK[0:0]$47
     9/10: $0$formal$blocking_with_spi_configured.v:126$7_EN[0:0]$50
    10/10: $0$formal$blocking_with_spi_configured.v:126$7_CHECK[0:0]$49
Creating decoders for process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
     1/6: $2\recv_rdy[0:0]
     2/6: $1\recv_rdy[1:1]
     3/6: $2\send_val[0:0]
     4/6: $2\send_msg[31:0]
     5/6: $1\send_val[1:1]
     6/6: $1\send_msg[63:32]
Creating decoders for process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:45$9'.
     1/6: $3\output_sel[0:0]
     2/6: $3\input_sel[0:0]
     3/6: $2\output_sel[0:0]
     4/6: $2\input_sel[0:0]
     5/6: $1\output_sel[0:0]
     6/6: $1\input_sel[0:0]
Creating decoders for process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:37$8'.
     1/1: $0\stored_control[1:0]

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\blocking_with_spi_configured.\_sv2v_0' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:0$83'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:100$3_CHECK' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:100$3_EN' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:103$4_CHECK' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:103$4_EN' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:112$5_CHECK' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:112$5_EN' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:116$6_CHECK' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:116$6_EN' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:126$7_CHECK' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.$formal$blocking_with_spi_configured.v:126$7_EN' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
No latch inferred for signal `\blocking_with_spi_configured.\recv_rdy' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
No latch inferred for signal `\blocking_with_spi_configured.\send_msg' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
No latch inferred for signal `\blocking_with_spi_configured.\send_val' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
No latch inferred for signal `\blocking_with_spi_configured.\sv2v_autoblock_1.i' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
No latch inferred for signal `\blocking_with_spi_configured.\sv2v_autoblock_2.i' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
No latch inferred for signal `\blocking_with_spi_configured.\input_sel' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:45$9'.
No latch inferred for signal `\blocking_with_spi_configured.\output_sel' from process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:45$9'.

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\blocking_with_spi_configured.\stored_control' using process `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:37$8'.
  created $dff cell `$procdff$228' with positive edge clock.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:0$83'.
Found and cleaned up 4 empty switches in `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
Removing empty process `blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:99$40'.
Found and cleaned up 4 empty switches in `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
Removing empty process `blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:65$15'.
Found and cleaned up 3 empty switches in `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:45$9'.
Removing empty process `blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:45$9'.
Found and cleaned up 2 empty switches in `\blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:37$8'.
Removing empty process `blocking_with_spi_configured.$proc$blocking_with_spi_configured.v:37$8'.
Cleaned up 13 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module blocking_with_spi_configured.
<suppressed ~19 debug messages>

2.4. Executing FUTURE pass.

2.5. Executing OPT_EXPR pass (perform const folding).
Optimizing module blocking_with_spi_configured.

2.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \blocking_with_spi_configured..
Removed 2 unused cells and 105 unused wires.
<suppressed ~3 debug messages>

2.7. Executing CHECK pass (checking for obvious problems).
Checking module blocking_with_spi_configured...
Found and reported 0 problems.

2.8. Executing OPT pass (performing simple optimizations).

2.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module blocking_with_spi_configured.

2.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\blocking_with_spi_configured'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

2.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \blocking_with_spi_configured..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$190.
    dead port 1/2 on $mux $procmux$193.
    dead port 1/2 on $mux $procmux$199.
    dead port 1/2 on $mux $procmux$202.
    dead port 1/2 on $mux $procmux$208.
    dead port 1/2 on $mux $procmux$214.
Removed 6 multiplexer ports.
<suppressed ~19 debug messages>

2.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \blocking_with_spi_configured.
Performed a total of 0 changes.

2.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\blocking_with_spi_configured'.
Removed a total of 0 cells.

2.8.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \blocking_with_spi_configured..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

2.8.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module blocking_with_spi_configured.

2.8.8. Rerunning OPT passes. (Maybe there is more to do..)

2.8.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \blocking_with_spi_configured..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

2.8.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \blocking_with_spi_configured.
Performed a total of 0 changes.

2.8.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\blocking_with_spi_configured'.
Removed a total of 0 cells.

2.8.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \blocking_with_spi_configured..

2.8.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module blocking_with_spi_configured.

2.8.14. Finished OPT passes. (There is nothing left to do.)

2.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 bits (of 32) from port B of cell blocking_with_spi_configured.$mul$blocking_with_spi_configured.v:76$18 ($mul).
Removed top 31 bits (of 32) from port B of cell blocking_with_spi_configured.$add$blocking_with_spi_configured.v:0$19 ($add).
Removed top 31 bits (of 32) from port A of cell blocking_with_spi_configured.$auto$genrtlil.cc:1567:genRTLIL$21 ($sub).
Removed top 30 bits (of 32) from port Y of cell blocking_with_spi_configured.$auto$genrtlil.cc:1567:genRTLIL$21 ($sub).
Removed top 30 bits (of 32) from port B of cell blocking_with_spi_configured.$shiftx$blocking_with_spi_configured.v:0$23 ($shiftx).
Removed top 31 bits (of 32) from port A of cell blocking_with_spi_configured.$auto$genrtlil.cc:1567:genRTLIL$33 ($sub).
Removed top 30 bits (of 32) from port Y of cell blocking_with_spi_configured.$auto$genrtlil.cc:1567:genRTLIL$33 ($sub).
Removed top 30 bits (of 32) from port B of cell blocking_with_spi_configured.$shiftx$blocking_with_spi_configured.v:0$35 ($shiftx).

2.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \blocking_with_spi_configured..

2.11. Executing MEMORY_COLLECT pass (generating $mem cells).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module blocking_with_spi_configured.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\blocking_with_spi_configured'.
Removed a total of 0 cells.

2.12.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \blocking_with_spi_configured..

2.12.4. Finished fast OPT passes.

2.13. Printing statistics.

=== blocking_with_spi_configured ===

   Number of wires:                 74
   Number of wire bits:            425
   Number of public wires:          19
   Number of public wire bits:     213
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     $add                            1
     $assert                         5
     $dff                            1
     $eq                             2
     $logic_and                      8
     $mul                            1
     $mux                           42
     $not                            4
     $shiftx                         3
     $sub                            2

2.14. Executing CHECK pass (checking for obvious problems).
Checking module blocking_with_spi_configured...
Found and reported 0 problems.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \blocking_with_spi_configured

3.2. Analyzing design hierarchy..
Top module:  \blocking_with_spi_configured
Removed 0 unused modules.
Module blocking_with_spi_configured directly or indirectly contains formal properties -> setting "keep" attribute.

4. Executing jny backend.

5. Executing RTLIL backend.
Output filename: ../model/design.il

End of script. Logfile hash: bbc4faab07, CPU: user 0.06s system 0.04s, MEM: 7.46 MB peak
Yosys 0.33+67 (git sha1 076c5ceb7, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 18% 2x hierarchy (0 sec), 18% 6x opt_expr (0 sec), ...
